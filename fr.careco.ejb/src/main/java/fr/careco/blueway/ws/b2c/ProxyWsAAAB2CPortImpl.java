
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package fr.careco.blueway.ws.b2c;

import java.util.Date;
import java.util.logging.Logger;

import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.jws.HandlerChain;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;

import fr.careco.aaa.ws.Vehicule;
import fr.careco.blueway.ws.WsAAAMapper;
import fr.careco.blueway.ws.model.AutorisationB2B;
import fr.careco.blueway.ws.model.AutorisationB2C;
import fr.careco.blueway.ws.model.IAutorisationServiceRemote;
import fr.careco.blueway.ws.model.ILogAppelServiceRemote;
import fr.careco.blueway.ws.model.LogAppelB2B;
import fr.careco.blueway.ws.model.LogAppelB2C;
import fr.legrain.careco.aaa.model.IVehiculeCacheAAAServiceRemote;
import fr.legrain.careco.aaa.model.VehiculeCacheAAA;
import fr.legrain.careco.aaa.model.VehiculeCacheAAAMapper;
import fr.legrain.lib.data.LibConversion;

/**
 * This class was generated by Apache CXF 3.0.0
 * 2014-06-13T15:57:13.233+02:00
 * Generated source version: 3.0.0
 * 
 */

@Stateless
@javax.jws.WebService(
                      serviceName = "ProxyWsAAAB2C",
                      portName = "ProxyWsAAAB2CPort",
                      targetNamespace = "http://carecoprod.blueway.fr:8180/engine53/52",
                      //wsdlLocation = "file:/home/nicolas/Bureau/Careco/Pack Careco/WSDL_B2C.wsdlg",
                      wsdlLocation = "/fr/careco/blueway/ws/b2c/WSDL_B2C.wsdl",
                      endpointInterface = "fr.careco.blueway.ws.b2c.ProxyWsAAAB2CPortType")
@org.jboss.ws.api.annotation.WebContext(contextRoot = "/engine53/52" , urlPattern="/WebserviceLauncherB2C")
@HandlerChain(file="/fr/careco/blueway/ws/handler-chain.xml")
public class ProxyWsAAAB2CPortImpl implements ProxyWsAAAB2CPortType {

    private static final Logger LOG = Logger.getLogger(ProxyWsAAAB2CPortImpl.class.getName());
    
    @EJB
    private IVehiculeCacheAAAServiceRemote vehiculeCacheAAAService;
    
    @EJB
    private IAutorisationServiceRemote autorisationService;
    
    @EJB
    private ILogAppelServiceRemote logAppelService;

    /* (non-Javadoc)
     * @see fr.careco.bleuway.ws2.ProxyWsAAAB2CPortType#aaa00WsB2C(fr.careco.bleuway.ws2.AAA00WsB2CIN  aaa00WsB2CInput )*
     */
    public fr.careco.blueway.ws.b2c.AAA00WsB2COUT aaa00WsB2C(AAA00WsB2CIN aaa00WsB2CInput) { 
        LOG.info("Executing operation aaa00WsB2C");
        System.out.println(aaa00WsB2CInput);
        System.out.println("login : "+aaa00WsB2CInput.getVarAAA().getLogin());
        System.out.println("mdp : "+aaa00WsB2CInput.getVarAAA().getMdp());
        System.out.println("nom : "+aaa00WsB2CInput.getVarAAA().getNom());
        System.out.println("typeReq : "+aaa00WsB2CInput.getVarAAA().getTypeReq());
        System.out.println("immat : "+aaa00WsB2CInput.getVarAAA().getImmat());
        
        System.out.println(aaa00WsB2CInput);
        
        LogAppelB2C log = new LogAppelB2C();
        AutorisationB2C aut = null;
        fr.careco.blueway.ws.b2c.AAA00WsB2COUT _return = null;
        
        try {
	        	_return = new fr.careco.blueway.ws.b2c.AAA00WsB2COUT(); 
	            VarAAARetourWs aaaWs = new VarAAARetourWs();
	    		_return.setVarAAARetourWs(aaaWs);
             	
	    		log.setDate_Log(new Date());
             	log.setHeure_Log(new Date());
             	log.setImmat_Log(aaa00WsB2CInput.getVarAAA().getImmat());
             	log.setNom_Log(aaa00WsB2CInput.getVarAAA().getNom());
             	log.setLogin_Log(aaa00WsB2CInput.getVarAAA().getLogin());
             	log.setMdp_Log(aaa00WsB2CInput.getVarAAA().getMdp());
             	log.setTyperReq_Log(LibConversion.stringToInteger(aaa00WsB2CInput.getVarAAA().getTypeReq()));
             	
             	//vérifier les droits d'utilisation du webservice dans la table AutorisationB2B et AutorisationB2C
            	aut = autorisationService.findByLoginB2C(aaa00WsB2CInput.getVarAAA().getLogin(),aaa00WsB2CInput.getVarAAA().getMdp());
            	
            	if(aut!=null) {
            		if(aut.getActiver()==1 ) {
            			//if {aut.getNbAppelMin()!=null && aut.getNbAppelMin() <50 ) {
            				if (aaa00WsB2CInput.getVarAAA().getNom()!=null && !aaa00WsB2CInput.getVarAAA().getNom().equals("")) {
            				
			            		System.out.println("Web Service B2C appelé par : "+aut.getNomAuthen()+" (login : "+aut.getLoginAuthen()+")");
			    	        	//si OK, consultation du cache puis appel du WS AAA si besoin.
			    	        	//VehiculeCacheAAA v = vehiculeCacheAAAService.wsSiVinConsulterVehiculeParImmatOuVin(aaa00WsB2BInput.getVarAAA().immat, null);
			            		VehiculeCacheAAA vCache = vehiculeCacheAAAService.rechercheDansCache(aaa00WsB2CInput.getVarAAA().immat, null);
			            		//VehiculeCacheAAA vCache = vehiculeCacheAAAService.rechercheDansCache("AA132SW", null);
			            		
			            		if(vCache==null) {
			            			//pas dans le cache, donc appel du ws
			            			vCache = vehiculeCacheAAAService.wsSiVinConsulterVehiculeParImmatOuVinProprio(aaa00WsB2CInput.getVarAAA().immat, null, aaa00WsB2CInput.getVarAAA().getNom(),true);
			            			//Appel de AAA avec une réponse positive - code type de log = 1 (Immat non trouvé dans la base de données. Appel du Ws  AAA avec retour des données sur l’immat)
			            			log.setCodeType_Log(1);
			            			log.setMessage("Vehicule trouvé par AAA");
			            		} else {
			            			//Lecture de la base de données – code type de log = 3 (Immat trouvé dans la base de données)
			            			log.setMessage("Vehicule dans le cache");
			            			log.setCodeType_Log(3);
			            		}
			            		
			    	        	if(vCache!=null) {
			            			//préparation de la réponse
//			    	        		_return = new fr.careco.blueway.ws.b2b.AAA00WsB2BOUT(); 
			    	        		WsAAAMapper mapper = new WsAAAMapper();
		             				//VarAAARetourWs aaaWs = mapper.mapCacheAAAtoVarAAARetourWsB2B(vCache);
			    	        		aaaWs = mapper.mapCacheAAAtoVarAAARetourWsB2C(vCache);
			            			_return.setVarAAARetourWs(aaaWs);
			            		
			    		        	// log de l'appel au WS pour facturation
			    		        	//logAppelService.enregistreLogB2B(log);
			    		        	
			    	        	}
		            		} else {
		            			log.setCodeType_Log(6);
		                		log.setMessage("Début du nom non renseigné (seulement pour B2C)");
		            		}
	//            		} else {
	//            			log.setCodeType_Log(6);
	//                		log.setMessage("Accès trop fréquents");
	//            		}
            		} else {
            			log.setCodeType_Log(6);
                		log.setMessage("Compte Utilisateur désactivé");
            		}
            	} else {
            		//Erreur fonctionnelle de traitement Blueway – code type de log = 6 (Demande non conforme) 
            		//2.11.2.1 Identification erronée
            		log.setCodeType_Log(6);
            		log.setMessage("Identification erronée");
            	}
             	
             	return _return;
        } catch (javax.ejb.EJBException ex) {
        	System.out.println("==================== javax.ejb.EJBException");
        	//javax.ejb.EJBException: BB88BB Vehicule non trouve
        	if(ex.getMessage()!=null && ex.getMessage().contains("Vehicule non trouvé")) {
        		//Appel de AAA avec une réponse négative – code type de log = 2 (Immat non trouvé dans la base de données. Appel du Ws  AAA avec retour en erreur)
        		log.setCodeType_Log(2);
        		log.setMessage("Vehicule non trouve");
        		System.out.println("==================== javax.ejb.EJBException 2");
        	} else {
        		//Erreur fonctionnelle de traitement AAA – code type de log = 4 (Erreur du ws AAA)
        		log.setCodeType_Log(4);
        		log.setMessage("Erreur AAA");
        		System.out.println("==================== javax.ejb.EJBException 4");
        	}
        	
        	ex.printStackTrace();
            //throw new RuntimeException(ex);
        	return _return;
        } catch (java.lang.Exception ex) {
			//Erreur technique de traitement Blueway – code type de log = 5 (Erreur de Blueway  dans le processus de traitement de la demande)
        	log.setCodeType_Log(5);
        	log.setMessage("Erreur WS");
        	System.out.println("==================== javax.ejb.Exception 5");
        	
            ex.printStackTrace();
        	return _return;
           // throw new RuntimeException(ex);
        } finally {
        	// log de l'appel au WS pour facturation
        	logAppelService.enregistreLogB2C(log);
        	if(aut!=null) {
        		try {
        			aut.setTime(new Date());
        			//aut.setNbAppelMin(0);
					autorisationService.enregistrerMerge(aut);
				} catch (Exception e) {
					System.out.println("==========finally ========== javax.ejb.Exception");
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
        	}
        }
    }
    
//    static public VarAAARetourWs initBidon() {
//    	VarAAARetourWs var = null;
//		if(var==null)
//			var = new VarAAARetourWs();
//								
//		var.setCarrosserie("");
//		var.setCarrosserieCG("");
//		var.setCO2("");
//		var.setCodifVinPRF("");
//		var.setCouleurVehic("");
//		var.setCouleurVehic("");
//		var.setCylindree("");
//		var.setDate1ErCIRAnnee("");
//		var.setDate1ErCirJour("");
//		var.setDate1ErCirMois("");
//		var.setDateDCGAnnee("");
//		var.setDateDcgJour("");
//		var.setDateDcgMois("");
//		var.setDepollution("");
//		var.setEmpat("");
//		var.setEnergie("");
//		var.setGenreV("");
//		var.setGenreVCG("");
//		var.setHauteur("");
//		var.setImmatSIV("");
//		var.setLargeur("");
//		var.setLongueur("");
//		var.setMarque("");
//		var.setMarqueCarros("");
//		var.setModeInject("");
//		var.setModele("");
//		var.setModeleEtude("");
//		var.setModelePRF("");
//		var.setNSerie("");
//		var.setNBCylind("");
//		var.setNBPLAss("");
//		var.setNBPortes("");
//		var.setNBSoupapes("");
//		var.setNBVitesse("");
//		var.setNBVolume("");
//		var.setPoidsVide("");
//		var.setPropulsion("");
//		var.setPTR("");
//		var.setPTRPRF("");
//		var.setPuisCh("");
//		var.setPuisFisc("");
//		var.setTPBoiteVit("");
//		var.setTurboCompr("");
//		var.setType("");
//		var.setTypeVinCG("");
//		var.setVersion("");
//		
//		return var;
//    }
    
    public VarAAARetourWs mapAAAtoVarAAARetourWs(Vehicule ws) {
    	VarAAARetourWs var = null;
		if(var==null)
			var = new VarAAARetourWs();
								
		var.setCarrosserie(ws.getCarrosserie());
		var.setCarrosserieCG(ws.getCarrosserieCG());
		var.setCO2(ws.getCo2());
		var.setCodifVinPRF(ws.getCodifVin());
		var.setCouleurVehic(ws.getConsExurb());
		var.setCouleurVehic(ws.getCouleurVehic());
		var.setCylindree(ws.getCylindree());
		var.setDate1ErCIRAnnee(LibConversion.integerToString(ws.getDate1ErCir().getAnnee().getYear()));
		var.setDate1ErCirJour(LibConversion.integerToString(ws.getDate1ErCir().getJour().getDay()));
		var.setDate1ErCirMois(LibConversion.integerToString(ws.getDate1ErCir().getMois().getMonth()));
		var.setDateDCGAnnee(LibConversion.integerToString(ws.getDateDCG().getAnnee().getYear())); 
		var.setDateDcgJour(LibConversion.integerToString(ws.getDateDCG().getJour().getDay())); 
		var.setDateDcgMois(LibConversion.integerToString(ws.getDateDCG().getMois().getMonth())); 
		var.setDepollution(ws.getDepollution());
		var.setEmpat(ws.getEmpat());
		var.setEnergie(ws.getEnergie());
		var.setGenreV(ws.getGenreV());
		var.setGenreVCG(ws.getGenreVCG());
		var.setHauteur(ws.getHauteur());
		var.setImmatSIV(ws.getImmatSiv()); 
		var.setLargeur(ws.getLargeur());
		var.setLongueur(ws.getLongueur()); //*
		var.setMarque(ws.getMarque());
		var.setMarqueCarros(ws.getMarqueCarros());
		var.setModeInject(ws.getModeInject());
		var.setModele(ws.getModele());
		var.setModeleEtude(ws.getModeleEtude());
		var.setModelePRF(ws.getModelePrf());
		var.setNSerie(ws.getNSerie());
		var.setNBCylind(ws.getNbCylind());
		var.setNBPLAss(ws.getNbPlAss());
		var.setNBPortes(ws.getNbPortes());
		var.setNBSoupapes(ws.getNbSoupape());
		var.setNBVitesse(ws.getNbVitesse());
		var.setNBVolume(ws.getNbVolume());
		var.setPoidsVide(ws.getPoidsVide());
		var.setPropulsion(ws.getPropulsion());
		var.setPTR(ws.getPtr());
		var.setPTRPRF(ws.getPtrPrf());
		var.setPuisCh(ws.getPuisCh());
		var.setPuisFisc(ws.getPuisFisc());
		var.setTPBoiteVit(ws.getTpBoiteVit());
		var.setTurboCompr(ws.getTurboCompr());
		var.setType(ws.getType());
		var.setTypeVinCG(ws.getTypeVinCG());
		var.setVersion(ws.getVersion()); //*
		
		return var;
    }
    
    public VarAAARetourWs mapAAAtoVarAAARetourWs(VehiculeCacheAAA ws) {
    	VarAAARetourWs var = null;
		if(var==null)
			var = new VarAAARetourWs();
								
		var.setCarrosserie(ws.getCarrosserie());
		var.setCarrosserieCG(ws.getCarrosserie_CG());
		var.setCO2(LibConversion.integerToString(ws.getCO2()));
		var.setCodifVinPRF(ws.getCodif_Vin_Pref());
		var.setCouleurVehic(ws.getCons_Exurb());
		var.setCouleurVehic(ws.getCouleur_Vehic());
		var.setCylindree(LibConversion.integerToString(ws.getCylindree()));
		var.setDate1ErCIRAnnee(ws.getDate_1er_Cir_Annee());
		var.setDate1ErCirJour(ws.getDate_1er_Cir_Jour());
		var.setDate1ErCirMois(ws.getDate_1er_Cir_Mois());
		var.setDateDCGAnnee(ws.getDate_Dcg_Annee()); 
		var.setDateDcgJour(ws.getDate_Dcg_Jour()); 
		var.setDateDcgMois(ws.getDate_Dcg_Mois()); 
		var.setDepollution(ws.getDepollution());
		var.setEmpat(LibConversion.integerToString(ws.getEmpat()));
		var.setEnergie(ws.getEnergie());
		var.setGenreV(ws.getGenre());
		var.setGenreVCG(ws.getGenre_V_CG());
		var.setHauteur(LibConversion.integerToString(ws.getHauteur()));
		var.setImmatSIV(ws.getImmat_SIV()); 
		var.setLargeur(LibConversion.integerToString(ws.getLargeur()));
		var.setLongueur(LibConversion.integerToString(ws.getLongueur())); //*
		var.setMarque(ws.getMarque());
		var.setMarqueCarros(ws.getMarque_Carros());
		var.setModeInject(ws.getMode_Inject());
		var.setModele(ws.getModele());
		var.setModeleEtude(ws.getModele_Etude());
		var.setModelePRF(ws.getModele_Prf());
		var.setNSerie(ws.getN_Serie());
		var.setNBCylind(LibConversion.integerToString(ws.getNb_Cylind()));
		var.setNBPLAss(LibConversion.integerToString(ws.getNb_Pl_Ass()));
		var.setNBPortes(LibConversion.integerToString(ws.getNb_Portes()));
		var.setNBSoupapes(LibConversion.integerToString(ws.getNb_Soupapes()));
		var.setNBVitesse(LibConversion.integerToString(ws.getNb_Vitesse()));
		var.setNBVolume(LibConversion.integerToString(ws.getNb_Volumes()));
		var.setPoidsVide(LibConversion.integerToString(ws.getPoids_Vide()));
		var.setPropulsion(ws.getPropulsion());
		var.setPTR(LibConversion.integerToString(ws.getPtr()));
		var.setPTRPRF(LibConversion.integerToString(ws.getPtr_Prf()));
		var.setPuisCh(LibConversion.integerToString(ws.getPuis_Ch()));
		var.setPuisFisc(LibConversion.integerToString(ws.getPuis_Fisc()));
		var.setTPBoiteVit(ws.getTp_Boite_Vit());
		var.setTurboCompr(ws.getTurbo_Compr());
		var.setType(ws.getType());
		var.setTypeVinCG(ws.getType_Vin_Cg());
		var.setVersion(ws.getVersion()); //*	
		
		return var;
    }

}
